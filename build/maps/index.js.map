{"version":3,"sources":["index.js"],"names":["getBehaviorBar","type","val","transTree","find","findIndex","merge","bars","pulldown","filter","loading","trigger","over","_getGroups","query","idf","nsons","state","splice","index","o","jj","parent","indexcode","push","data","forEach","son","ii","idrecode","indexOf","LOADING","concat","dataAry","curState","findParents","_parentIndex","item","OVER","ostate","opts","content","p","treeX","Aotoo","Tree","Actions","update","params","append","this","$append","TRIGGER","delete","loaded","$loaded","getGroups","feather","temp","myParentsIndex","$id","myParents","sonFeather","getParents","target","tree","header","itemClass","groups","listClass","itemMethod","autoinject","dft","App","pure","list","isArray","React","createElement","className","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","preRender","bind","footer","list_part","Component","UPDATE","arguments","length","undefined","oriData","APPEND","unshift","DELETE","LOADED","PREPEND","PULLDOWN"],"mappings":"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","file":"../index.js","sourcesContent":["\nconst {\n  list, \n  transTree,\n  find,\n  findIndex,\n  merge,\n  isArray,\n  filter\n} = Aotoo\n\nconst bars = {\n    trigger:  <div className=\"treex-bar\"><div className=\"treex-trigger-bar\">加载更多内容</div></div>\n  , pulldown: <div className=\"treex-bar\"><div className=\"treex-pull-bar\">刷新页面</div></div>\n  , loading:  <div className=\"treex-bar\"><div className=\"treex-loading\">Loading...</div></div>\n  , over:     <div className=\"treex-bar\"><div className=\"treex-over-bar\">没有更多内容了</div></div>\n}\n\nfunction getBehaviorBar(type, val){\n  if (val) {\n    switch (type) {\n      case 'pulldown':\n        return val == true ? bars.pulldown : val\n        break;\n      case 'loading':\n        return val == true ? bars.loading : val\n        break;\n      case 'over':\n        return val == true ? bars.over : val\n        break;\n      case 'trigger':\n        return val == true ? bars.trigger : val\n        break;\n    }\n  }\n}\n\nclass Tree extends React.Component {\n  constructor(props){\n    super(props)\n    this.preRender = this::this.preRender\n    this.state = {\n      data: this.props.data || [],\n      pulldown: this.props.pulldown || false,\n      loading: this.props.loading || false,\n      trigger: this.props.trigger || false,\n      over: this.props.over || false\n    }\n  }\n\n  preRender(){\n    const header = this.props.header ? this.props.header : ''\n    const footer = this.props.footer ? this.props.footer : ''\n\n    const list_part = list({\n      data: transTree(this.state.data),\n      listClass: this.props.listClass,\n      itemClass: this.props.itemClass,\n      itemMethod: this.props.itemMethod\n    })\n\n    if (\n      header ||\n      footer ||\n      this.state.trigger ||\n      this.state.pulldown ||\n      this.state.loading ||\n      this.state.over\n    ) {\n      return (\n        <div className=\"list-container\">\n          {getBehaviorBar('pulldown', this.state.pulldown)}\n          {header}\n          {list_part}\n          {footer}\n          {getBehaviorBar('trigger', this.state.trigger)}\n          {getBehaviorBar('over', this.state.over)}\n          {getBehaviorBar('loading', this.state.loading)}\n        </div>\n      )\n    } else {\n      return list_part\n    }\n  }\n\n  render(){\n    return this.preRender()\n  }\n}\n\nconst Actions = {\n  UPDATE: function(ostate, opts={}){\n    let state = this.curState\n    let data = state.data\n\n    const index = opts.index\n    if (!index && index!=0) {\n      if ( isArray(opts.data) ) {\n        state.data = opts.data\n        return state\n      }\n    } else {\n      let oriData = data[index]\n      oriData = merge(oriData, opts.data)\n      return state\n    }\n  },\n\n  APPEND: function(ostate, opts={}){\n    let state = this.curState\n    let data = state.data\n\n    if (isArray(opts.data)) {\n      data = data.concat(opts.data)\n    } else {\n      data.push(opts.data)\n    }\n    state.data = data\n    return state\n  },\n\n  PREPEND: function(ostate, opts={}){\n    let state = this.curState\n    let data = state.data\n\n    if (isArray(opts.data)) {\n      data = opts.data.concat(data)\n    } else {\n      data.unshift(opts.data)\n    }\n    state.data = data\n    return state\n  },\n\n  /*\n    opts:{\n      index: {number}\n      query: {Json}\n    }\n  */\n  DELETE: function(ostate, opts={}){\n    let state = this.curState\n    let data = state.data\n\n    if (opts.index || opts.index == 0) {\n      data.splice(opts.index, 1);\n    }\n    else if(opts.query) {\n      const index = findIndex(data, opts.query)\n      if (index>-1) {\n        data.splice(index, 1)\n      }\n    }\n    state.data = data\n    return state\n  },\n\n  // ========== 状态控制 ===========\n\n  LOADING: function(ostate, opts={}){\n    let state = this.curState\n    if (!state.over) {\n      state.loading = opts.loading || true\n      state.pulldown = false\n    }\n    return state\n  },\n\n  LOADED: function(ostate, opts={}){\n    let state = this.curState\n    if (!state.over) {\n      state.loading = false\n      state.pulldown = false\n    }\n    return state\n  },\n\n  OVER: function(ostate, opts={}){\n    let state = this.curState\n    state.loading = false\n    state.pulldown = false\n    state.trigger = false\n    state.over = opts.over || true\n    return state\n  },\n\n  PULLDOWN: function(ostate, opts={}){\n    let state = this.curState\n    state.loading = false\n    state.over = false\n    state.pulldown = opts.pulldown || true\n    return state\n  },\n\n  TRIGGER: function(ostate, opts={}){\n    if (!this||!this.state) return\n    let state = this.curState\n    state.loading = false\n    state.pulldown = false\n    state.over = false\n    state.trigger = opts.trigger || true\n    return state\n  },\n}\n\nlet idrecode = []\nlet indexcode = []\nfunction _getGroups(dataAry, idf){\n  let nsons = []\n\n  let sons = filter(dataAry, (o, jj) => {\n    if (o.parent == idf) {\n      indexcode.push(jj)\n      return o.parent == idf\n    }\n  })\n\n  sons.forEach( (son, ii) => {\n    if (son.idf && idrecode.indexOf(son.idf) == -1) {\n      idrecode.push(son.idf)\n      nsons = nsons.concat(son).concat(_getGroups(dataAry, son.idf))\n    } else {\n      nsons = nsons.concat(son)\n    }\n  })\n  return nsons\n}\n\nlet myParentsIndex = []\nlet myParents = []\n\n/**\n * [查找特定idf的数据，]\n * @param  {[type]} dataAry [description]\n * @param  {[type]} idf     [description]\n * @return {[type]}         [description]\n */\nfunction findParents(dataAry, idf){\n  let _parentIndex\n  const item = find(dataAry, (o,ii)=>o.idf==idf)\n\n  if (item && item.parent) {\n    const p = find(dataAry, (o, ii)=>{\n      _parentIndex = ii\n      return o.idf==item.parent\n    })\n    if (p){\n      myParents.push({index: _parentIndex, content: p})\n      findParents(dataAry, item.parent)\n    }\n  }\n}\n\nfunction App(opts){\n  const treeX = Aotoo(Tree, Actions, opts)\n  treeX.extend({\n    update: function(params) {\n      this.$update(params)\n    },\n    append: function(params) {\n      this.$append(params)\n    },\n    prepend: function(params) {\n      this.$prepend(params)\n    },\n    delete: function(params) {\n      this.$delete(params)\n    },\n    loading: function(params) {\n      this.$loading(params)\n    },\n    loaded: function(params) {\n      this.$loaded(params)\n    },\n    over: function(params) {\n      this.$over(params)\n    },\n    pulldown: function(params) {\n      this.$pulldown(params)\n    },\n    trigger: function(params) {\n      this.$trigger(params)\n    },\n    /**\n     * data {Array} 完整的数据\n     * idf  {String}  指定父级id\n     * feather  {Boolean}  true = 是否返回完整数据，false = 返回完整的ID\n     */\n    getGroups: function(data, idf, feather){\n      data = data||this.data||[]\n      idrecode = []\n      indexcode = []\n      const index = findIndex(data, o=>o.idf==idf)\n      indexcode.push(index)\n      let groups = _getGroups(data||[], idf)\n      // if (feather) return groups\n      if (feather) {\n        let temp = []\n        indexcode.forEach( $id => {\n          let sonFeather = data[$id]\n          sonFeather['__index'] = $id\n          temp.push(sonFeather)\n        })\n        return temp\n      }\n      return indexcode\n    },\n\n    getParents: function(data, idf){\n      data = data||this.data||[]\n      myParents = []\n      findParents(data, idf)\n      return myParents\n    },\n\n    findAndUpdate: function(query, target){\n      const data = this.data||[]\n      if (query) {\n        const index = findIndex(data, query)\n        if (index) {\n          this.dispach('UPDATE', {\n            index: index,\n            data: target\n          })\n        }\n      }\n    }\n  })\n  return treeX\n}\n\n\n\n/*\n [ {title: '', idf: 'aaa', index: 0},\n  {title: 'abcfd', parent: 'aaa', index: 1},\n  {title: 'bcasd', parent: 'aaa', index: 2},\n  {title: 'aacwq', parent: 'aaa', index: 2},\n\n  {title: <button>123</button>, idf: 'bbb', index: 3},\n  {title: 'yyufs', parent: 'bbb', index: 4},\n  {title: 'xfdsw', parent: 'bbb', index: 5},\n  {title: 'xxxdsehh', parent: 'bbb', index: 5}, ]\n*/\n\n\n/*\n  props: {\n    data: {Array},\n    loading: {Boolean || JSX }\n    header: {JSX},\n    footer: {JSX},\n    itemClass: {String},\n    listClass: {String},\n    itemMethod: {Function}   componentDidMount 后列表项响应事件\n  }\n  theme: {String}  注入样式\n  autoinject: {Boolean} 是否自动注入\n  rendered: {Function} 渲染完成后的动作，在原生react 的 componentDidMount 后\n*/\n\nexport default function tree(opts){\n  let dft = {\n    props: {\n      data: [],\n      loading: false,\n      header: '',\n      footer: '',\n      itemClass: '',\n      listClass: '',\n      itemMethod: ''\n    },\n    theme: '',\n    autoinject: true,\n    rendered: ''\n  }\n  dft = merge(dft, opts)\n  return App(dft)\n}\n\nexport function pure(opts){\n  return tree(opts)\n}\n"]}